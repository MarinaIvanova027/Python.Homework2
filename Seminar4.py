# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке 
# возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

n = int(input("Введите число элементов 1го множества: "))
list_1=[]
for i in range(n):
    num = int(input("Введите число: "))
    list_1.append(num)
print(list_1)

m = int(input("Введите число элементов 2го множества: "))
list_2 = []
for i in range(m):
    num = int(input("Введите число: "))
    list_2.append(num)
print(list_2)

result = list_1 + list_2
print(result)
for i in set(result):
    if result.count(i) > 1:
        print(i)


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены 
# только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте 
# выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего 
# модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым 
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

import random
n_kustov = int(input("Введите количество кустов: "))
berry = list(random.randint(0, 10) for i in range(n_kustov))
result = []
i, sum = 0, 0
print(berry)

while i < n_kustov:
    if i == n_kustov - 1:
        sum = berry[i] + berry[i - 1] + berry[0]
    else:
        sum = berry[i] + berry[i - 1] + berry[i + 1]
        result.append(sum)
        result.sort()
    i += 1

print(f"Максимальное число ягод за один заход {result[-1]}")